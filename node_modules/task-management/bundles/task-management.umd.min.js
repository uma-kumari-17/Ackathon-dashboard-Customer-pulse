!function(a,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/core"),require("@angular/material/datepicker"),require("@angular/material/dialog"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/form-field"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slide-toggle"),require("@angular/material/slider"),require("@angular/material/snack-bar"),require("@angular/material/sort"),require("@angular/material/stepper"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tree")):"function"==typeof define&&define.amd?define("task-management",["exports","@angular/core","@angular/forms","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/core","@angular/material/datepicker","@angular/material/dialog","@angular/material/divider","@angular/material/expansion","@angular/material/form-field","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slide-toggle","@angular/material/slider","@angular/material/snack-bar","@angular/material/sort","@angular/material/stepper","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tree"],e):e((a="undefined"!=typeof globalThis?globalThis:a||self)["task-management"]={},a.ng.core,a.ng.forms,a.ng.material.autocomplete,a.ng.material.badge,a.ng.material.bottomSheet,a.ng.material.button,a.ng.material.buttonToggle,a.ng.material.card,a.ng.material.checkbox,a.ng.material.chips,a.ng.material.core,a.ng.material.datepicker,a.ng.material.dialog,a.ng.material.divider,a.ng.material.expansion,a.ng.material.formField,a.ng.material.gridList,a.ng.material.icon,a.ng.material.input,a.ng.material.list,a.ng.material.menu,a.ng.material.paginator,a.ng.material.progressBar,a.ng.material.progressSpinner,a.ng.material.radio,a.ng.material.select,a.ng.material.sidenav,a.ng.material.slideToggle,a.ng.material.slider,a.ng.material.snackBar,a.ng.material.sort,a.ng.material.stepper,a.ng.material.table,a.ng.material.tabs,a.ng.material.toolbar,a.ng.material.tree)}(this,(function(a,e,r,t,n,l,i,o,u,g,m,s,c,p,d,M,b,f,k,v,q,y,h,T,C,S,x,O,I,P,j,w,B,R,A,D,F){"use strict";function _(a){if(a&&a.__esModule)return a;var e=Object.create(null);return a&&Object.keys(a).forEach((function(r){if("default"!==r){var t=Object.getOwnPropertyDescriptor(a,r);Object.defineProperty(e,r,t.get?t:{enumerable:!0,get:function(){return a[r]}})}})),e.default=a,Object.freeze(e)}var z=_(e),L=function(){};L.ɵprov=z.ɵɵdefineInjectable({factory:function(){return new L},token:L,providedIn:"root"}),L.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],L.ctorParameters=function(){return[]};var E=function(){function a(){}return a.prototype.ngOnInit=function(){},a}();E.decorators=[{type:e.Component,args:[{selector:"lib-task-management",template:'<mat-horizontal-stepper\r\n  #stepper\r\n  labelPosition="bottom"\r\n  style="background-color: white; height: 95px"\r\n>\r\n  <mat-step label="CS" state="phone">\r\n    <div >\r\n      <lib-create-task></lib-create-task>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step label="AT" state="lock">\r\n    <div>\r\n      <lib-assign-task></lib-assign-task>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step label="RT" state="lock">\r\n    <div ></div>\r\n  </mat-step>\r\n  <mat-step label="RAT" state="lock">\r\n    <div >\r\n      <lib-re-assign-task></lib-re-assign-task>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step label="R" state="lock">\r\n    <div >\r\n      <lib-create-reminder></lib-create-reminder>\r\n    </div>\r\n  </mat-step>\r\n\r\n  <ng-template matStepperIcon="phone">\r\n    <mat-icon>call_end</mat-icon>\r\n  </ng-template>\r\n  <ng-template matStepperIcon="lock">\r\n    <mat-icon>lock</mat-icon>\r\n  </ng-template>\r\n</mat-horizontal-stepper>\r\n'}]}],E.ctorParameters=function(){return[]},E.propDecorators={stepper:[{type:e.ViewChild,args:["stepper"]}]};Object.create;function G(a,e){var r="function"==typeof Symbol&&a[Symbol.iterator];if(!r)return a;var t,n,l=r.call(a),i=[];try{for(;(void 0===e||e-- >0)&&!(t=l.next()).done;)i.push(t.value)}catch(a){n={error:a}}finally{try{t&&!t.done&&(r=l.return)&&r.call(l)}finally{if(n)throw n.error}}return i}Object.create;var N=function(){function a(){}return a.prototype.ngOnInit=function(){},a}();N.decorators=[{type:e.Component,args:[{selector:"lib-create-task",template:"<p>create-task works!</p>\n",styles:[""]}]}],N.ctorParameters=function(){return[]};var V=function(){function a(){}return a.prototype.ngOnInit=function(){},a}();V.decorators=[{type:e.Component,args:[{selector:"lib-assign-task",template:"<p>assign-task works!</p>\n",styles:[""]}]}],V.ctorParameters=function(){return[]};var H=function(){function a(){}return a.prototype.ngOnInit=function(){},a}();H.decorators=[{type:e.Component,args:[{selector:"lib-re-assign-task",template:"<p>re-assign-task works!</p>\n",styles:[""]}]}],H.ctorParameters=function(){return[]};var J=function(){function a(){}return a.prototype.ngOnInit=function(){},a}();J.decorators=[{type:e.Component,args:[{selector:"lib-create-reminder",template:"<p>create-reminder works!</p>\n",styles:[""]}]}],J.ctorParameters=function(){return[]};var K=[x.MatSelectModule,b.MatFormFieldModule,c.MatDatepickerModule,v.MatInputModule,g.MatCheckboxModule,u.MatCardModule,t.MatAutocompleteModule,r.FormsModule,r.ReactiveFormsModule,k.MatIconModule,n.MatBadgeModule,l.MatBottomSheetModule,i.MatButtonModule,o.MatButtonToggleModule,m.MatChipsModule,p.MatDialogModule,d.MatDividerModule,M.MatExpansionModule,f.MatGridListModule,q.MatListModule,y.MatMenuModule,h.MatPaginatorModule,T.MatProgressBarModule,C.MatProgressSpinnerModule,S.MatRadioModule,s.MatRippleModule,O.MatSidenavModule,I.MatSlideToggleModule,P.MatSliderModule,j.MatSnackBarModule,w.MatSortModule,B.MatStepperModule,R.MatTableModule,A.MatTabsModule,D.MatToolbarModule,F.MatTreeModule],Q=function(){};Q.decorators=[{type:e.NgModule,args:[{declarations:[E,N,V,H,J],imports:function(){for(var a=[],e=0;e<arguments.length;e++)a=a.concat(G(arguments[e]));return a}(K),exports:[E,N,V,H,J]}]}],a.AssignTaskComponent=V,a.CreateReminderComponent=J,a.CreateTaskComponent=N,a.ReAssignTaskComponent=H,a.TaskManagementComponent=E,a.TaskManagementModule=Q,a.TaskManagementService=L,Object.defineProperty(a,"__esModule",{value:!0})}));
//# sourceMappingURL=task-management.umd.min.js.map
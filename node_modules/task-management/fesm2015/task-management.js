import * as i0 from '@angular/core';
import { Injectable, Component, ViewChild, NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatAutocompleteModule } from '@angular/material/autocomplete';
import { MatBadgeModule } from '@angular/material/badge';
import { MatBottomSheetModule } from '@angular/material/bottom-sheet';
import { MatButtonModule } from '@angular/material/button';
import { MatButtonToggleModule } from '@angular/material/button-toggle';
import { MatCardModule } from '@angular/material/card';
import { MatCheckboxModule } from '@angular/material/checkbox';
import { MatChipsModule } from '@angular/material/chips';
import { MatRippleModule } from '@angular/material/core';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatDialogModule } from '@angular/material/dialog';
import { MatDividerModule } from '@angular/material/divider';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatGridListModule } from '@angular/material/grid-list';
import { MatIconModule } from '@angular/material/icon';
import { MatInputModule } from '@angular/material/input';
import { MatListModule } from '@angular/material/list';
import { MatMenuModule } from '@angular/material/menu';
import { MatPaginatorModule } from '@angular/material/paginator';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';
import { MatRadioModule } from '@angular/material/radio';
import { MatSelectModule } from '@angular/material/select';
import { MatSidenavModule } from '@angular/material/sidenav';
import { MatSlideToggleModule } from '@angular/material/slide-toggle';
import { MatSliderModule } from '@angular/material/slider';
import { MatSnackBarModule } from '@angular/material/snack-bar';
import { MatSortModule } from '@angular/material/sort';
import { MatStepperModule } from '@angular/material/stepper';
import { MatTableModule } from '@angular/material/table';
import { MatTabsModule } from '@angular/material/tabs';
import { MatToolbarModule } from '@angular/material/toolbar';
import { MatTreeModule } from '@angular/material/tree';

class TaskManagementService {
    constructor() { }
}
TaskManagementService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TaskManagementService_Factory() { return new TaskManagementService(); }, token: TaskManagementService, providedIn: "root" });
TaskManagementService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
TaskManagementService.ctorParameters = () => [];

class TaskManagementComponent {
    constructor() { }
    ngOnInit() { }
}
TaskManagementComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-task-management',
                template: "<mat-horizontal-stepper\r\n  #stepper\r\n  labelPosition=\"bottom\"\r\n  style=\"background-color: white; height: 95px\"\r\n>\r\n  <mat-step label=\"CS\" state=\"phone\">\r\n    <div >\r\n      <lib-create-task></lib-create-task>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step label=\"AT\" state=\"lock\">\r\n    <div>\r\n      <lib-assign-task></lib-assign-task>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step label=\"RT\" state=\"lock\">\r\n    <div ></div>\r\n  </mat-step>\r\n  <mat-step label=\"RAT\" state=\"lock\">\r\n    <div >\r\n      <lib-re-assign-task></lib-re-assign-task>\r\n    </div>\r\n  </mat-step>\r\n  <mat-step label=\"R\" state=\"lock\">\r\n    <div >\r\n      <lib-create-reminder></lib-create-reminder>\r\n    </div>\r\n  </mat-step>\r\n\r\n  <ng-template matStepperIcon=\"phone\">\r\n    <mat-icon>call_end</mat-icon>\r\n  </ng-template>\r\n  <ng-template matStepperIcon=\"lock\">\r\n    <mat-icon>lock</mat-icon>\r\n  </ng-template>\r\n</mat-horizontal-stepper>\r\n"
            },] }
];
TaskManagementComponent.ctorParameters = () => [];
TaskManagementComponent.propDecorators = {
    stepper: [{ type: ViewChild, args: ['stepper',] }]
};

class CreateTaskComponent {
    constructor() { }
    ngOnInit() {
    }
}
CreateTaskComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-create-task',
                template: "<p>create-task works!</p>\n",
                styles: [""]
            },] }
];
CreateTaskComponent.ctorParameters = () => [];

class AssignTaskComponent {
    constructor() { }
    ngOnInit() {
    }
}
AssignTaskComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-assign-task',
                template: "<p>assign-task works!</p>\n",
                styles: [""]
            },] }
];
AssignTaskComponent.ctorParameters = () => [];

class ReAssignTaskComponent {
    constructor() { }
    ngOnInit() {
    }
}
ReAssignTaskComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-re-assign-task',
                template: "<p>re-assign-task works!</p>\n",
                styles: [""]
            },] }
];
ReAssignTaskComponent.ctorParameters = () => [];

class CreateReminderComponent {
    constructor() { }
    ngOnInit() {
    }
}
CreateReminderComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-create-reminder',
                template: "<p>create-reminder works!</p>\n",
                styles: [""]
            },] }
];
CreateReminderComponent.ctorParameters = () => [];

const materialModules = [
    MatSelectModule,
    MatFormFieldModule,
    MatDatepickerModule,
    MatInputModule,
    MatCheckboxModule,
    MatCardModule,
    MatAutocompleteModule,
    FormsModule,
    ReactiveFormsModule,
    MatIconModule,
    MatBadgeModule,
    MatBottomSheetModule,
    MatButtonModule,
    MatButtonToggleModule,
    MatChipsModule,
    MatDialogModule,
    MatDividerModule,
    MatExpansionModule,
    MatGridListModule,
    MatListModule,
    MatMenuModule,
    MatPaginatorModule,
    MatProgressBarModule,
    MatProgressSpinnerModule,
    MatRadioModule,
    MatRippleModule,
    MatSidenavModule,
    MatSlideToggleModule,
    MatSliderModule,
    MatSnackBarModule,
    MatSortModule,
    MatStepperModule,
    MatTableModule,
    MatTabsModule,
    MatToolbarModule,
    MatTreeModule,
];
class TaskManagementModule {
}
TaskManagementModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    TaskManagementComponent,
                    CreateTaskComponent,
                    AssignTaskComponent,
                    ReAssignTaskComponent,
                    CreateReminderComponent,
                ],
                imports: [...materialModules],
                exports: [
                    TaskManagementComponent,
                    CreateTaskComponent,
                    AssignTaskComponent,
                    ReAssignTaskComponent,
                    CreateReminderComponent,
                ],
            },] }
];

/*
 * Public API Surface of task-management
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AssignTaskComponent, CreateReminderComponent, CreateTaskComponent, ReAssignTaskComponent, TaskManagementComponent, TaskManagementModule, TaskManagementService };
//# sourceMappingURL=task-management.js.map
